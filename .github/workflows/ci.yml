name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Tests (Python ${{ matrix.python }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Test against Python 3.10 and the latest 3.x available on Actions runners
        python: ["3.10", "3.x"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install make on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y make
          echo "C:\\ProgramData\\chocolatey\\bin" >> $env:GITHUB_PATH
      - name: Install dev deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run full test suite (lint, types, tests, coverage, codecov)
        shell: bash
        run: make test
      - name: Build wheel/sdist
        shell: bash
        run: python -m build
      - name: Verify wheel install in clean env
        shell: bash
        run: |
          python -m venv .venv_wheel
          . .venv_wheel/bin/activate 2>/dev/null || . .venv_wheel/Scripts/activate 2>/dev/null
          pip install dist/*.whl
          lib_cli_exit_tools --version || python -m lib_cli_exit_tools --version

  pipx-uv:
    name: pipx/uv verification (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Build wheel
        run: |
          python -m pip install --upgrade pip build
          python -m build
      - name: pipx install from wheel
        run: |
          python -m pip install pipx
          pipx install dist/*.whl
          lib_cli_exit_tools --version
      - name: uv tool install
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.local/share/uv/bin:$PATH"
          uv tool install .
          lib_cli_exit_tools --version

  # nix and conda packaging builds are disabled for now to keep CI green.
  nix:
    name: Nix build (flake)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix (flakes)
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Build with Nix flake
        working-directory: packaging/nix
        run: |
          nix build .#default -L
          echo "Built path: $(readlink -f result || true)"

  conda:
    name: Conda build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
      - name: Build conda recipe (local source, no test)
        shell: bash -l {0}
        env:
          CONDA_USE_LOCAL: "1"
        run: |
          conda config --add channels conda-forge
          conda config --add channels defaults
          conda install -y conda-build
          conda build packaging/conda/recipe --no-test -c conda-forge -c defaults
